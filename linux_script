#! /bin/bash
echo "Enter your sweet name"
read uname
echo "Enter your password"
read password
echo "Enter your age"
read age
if [[ ($uname == "Narayana" && $password == "password" && $age == "25") ]] ; then
echo "valid user"
else
echo "Invalid user"
fi

========================================================================


#! /bin/bash
echo "Enter your lucky number"
read n
if [[ ($n -eq 100) ]] ;
then
echo "you got 1st prize"
elif [[ ($n -eq 50) ]] ;
then
echo "you got 2nd prize" 
elif [[ ($n -eq 20) ]] ;
then
echo "you got 3rd prize" 
else 
echo "sorry try again latter"
fi

==============================print your name multile times===============================================

i#!/bin/bash
echo "Enter your Good name"
read name
for i in {1..10}; do
echo "Erripuka $name"
done

====================print names in serial maner============================================================
#!/bin/bash
for i in apple banana cherry; do
echo "Fruit $i"
done
========================================================================================================
#!/bin/bash
for i in  {1..10..2}; do
echo "$i"
done

o/p----> 1 3 5 7 9
======================================================================================================

for i in *; do
echo "$i"
done

This will print the names of all files and directories in the current directory.
==========================================================================================================
üî¢ Integer Comparison Operators (used with test or [ ])
Operator | Meaning | Example
-eq | Equal to | [ "$a" -eq "$b" ]
-ne | Not equal to | [ "$a" -ne "$b" ]
-lt | Less than | [ "$a" -lt "$b" ]
-le | Less than or equal to | [ "$a" -le "$b" ]
-gt | Greater than | [ "$a" -gt "$b" ]
-ge | Greater than or equal to | [ "$a" -ge "$b" ]

-------------------------------------------------------------------
üî§ String Comparison Operators
Operator | Meaning | Example
= | Equal to | [ "$str1" = "$str2" ]
!= | Not equal to | [ "$str1" != "$str2" ]
< | Less than (lexical order) | [ "$str1" \< "$str2" ]
> | Greater than (lexical order) | [ "$str1" \> "$str2" ]
-z | String is null (empty) | [ -z "$str" ]
-n | String is not null (not empty) | [ -n "$str" ]
-------------------------------------------------------------------
üìÅ File Test Operators

Operator | Meaning
-e | File exists
-f | File exists and is a regular file
-d | File exists and is a directory
-r | File is readable
-w | File is writable
-x | File is executable
-s | File is not empty
-L | File is a symbolic link
-------------------------------------------------------------------
-eq: Equal
-ne: Not equal
-lt: Less than
-le: Less than or equal
-gt: Greater than
-ge: Greater than or equal

========================================================================================================
yes "nari" | head -n 10    -----print no of times
seq 10 | xargs -I {} echo "nari"
seq 10 | xargs -I {} echo "nari {}"
========================================================================================================

